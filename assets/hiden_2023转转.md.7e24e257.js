import{_ as s,o as l,c as n,V as a}from"./chunks/framework.b450deef.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"hiden/2023转转.md","filePath":"hiden/2023转转.md"}'),o={name:"hiden/2023转转.md"},p=a(`<h2 id="_2023-2-6-转转一面" tabindex="-1">2023.2.6 转转一面 <a class="header-anchor" href="#_2023-2-6-转转一面" aria-label="Permalink to &quot;2023.2.6 转转一面&quot;">​</a></h2><ol><li>script defer async</li><li>输入url到页面显示的过程</li><li>tcp连接过程</li><li>为什么3次握手 - 说主要是稳定性而不是安全性</li><li>TCP和UDP的区别与场景</li><li>CSS盒模型</li><li>BFS解决</li><li>改变盒模型 box-sizing 属性与区别 主要是内容宽度不是margin</li><li>css单位区别</li><li>移动端响应式适配</li><li>块元素居中 什么时候用定位偏移 - 答了伪元素居中，说主要是fixed定位弹窗时</li><li>讲讲重排重绘</li><li>请求方法</li><li>介绍 OPTION 请求 - 说讲到简单请求/复杂请求就行</li><li>解决跨域的方式 - 说了 jsonp iframe cors devServer</li><li>代理工具抓请求包 - 场景是请求被代理 怎么调试这个代理请求有没有问题 什么shell、pasou等工具 - 不了解 ❌ Whistle、LightProxy 就是抓包 和 代理工具无关...</li><li>请求状态码 - 追问 401 知道吗</li><li>JS的基本类型 - 漏了 Bigint</li><li>JS判断类型 - 只说了 typeof instanof Array.isArray</li><li>判断数组 - 只说了 instanof Array.isArray</li><li>0.1+0.2 不等于 3 - 浮点类型精度问题</li><li>怎么解决精度问题 = 说了 Bigint ，说还可以转成整数？</li><li>说执行结果</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">conosle</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setTimeout</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> promise </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">reject</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">resp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/get</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 接口请求返回值是promise</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">resp</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>4 1 setTimeout 2 3 3和2 不确定 因为 请求结果未知</p><ol start="24"><li>说说事件循环</li><li>说执行结果</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(obj1 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> obj2)</span></span></code></pre></div><p>不相等说说原因</p><ol start="25"><li>怎么判断对象相等</li><li>怎么拷贝对象</li><li>说说节流防抖区别/场景/实现原理 - 场景说了输入框和按钮点击，说主要还有防止频繁请求</li><li>说一下 $nexttick</li><li>vue生命周期</li><li>请求放在哪个生命周期</li><li>组件传参方式</li><li>了解 pina 吗 说一下 - 没用过大概讲了印象，说是可以用到vue2里</li><li>用过vue3吗？说一下composition api体验</li><li>vue2响应式数据原理</li><li>vue3 和 vue2 区别</li><li>webpack原理</li><li>在Plugin 里用过 AST 吗</li><li>优化webpack</li><li>有什么问题问吗？ - 说技术栈 vue2 和 react 一半一半, 项目会比较多 1个人可能负责多个功能</li></ol><h2 id="_2023-2-8-转转二面" tabindex="-1">2023.2.8 转转二面 <a class="header-anchor" href="#_2023-2-8-转转二面" aria-label="Permalink to &quot;2023.2.8 转转二面&quot;">​</a></h2><ol><li>聊简历项目 - 一码两端实现/jsbrige原理/怎么维护api新增changelog/为什么多页/单页优化/微前端</li><li>实现动画 翻转卡片 ❌</li><li>无限列表优化 - 答虚拟列表 实际渲染3屏</li><li>vue2 data定义了 <code>obj.a:1</code> <code>mounted</code> 执行 <code>obj.a = 2</code> 页面会怎么显示 ❌ --&gt; 说不是异步渲染的问题, 是响应式数据的问题</li><li>说说 <code>nexttick</code></li><li>二叉树获取第n层有几个子节点 - 答 广度优先递归/双向指针 不确定</li><li>换工作理由 - 答关注新技术、技术分享</li><li>有什么问题 - 都是核心功能主要是二手业务/职级本来按腾讯后来按58/技术博客和深圳分部轮流维护</li><li>面试官说自己的看法 - 说转转更偏业务开发,工程化基本稳定,认为跟我目前的经历有偏差, 需要讨论, 还有技术三面😭</li></ol><h2 id="_2023-2-9-转转三面" tabindex="-1">2023.2.9 转转三面 <a class="header-anchor" href="#_2023-2-9-转转三面" aria-label="Permalink to &quot;2023.2.9 转转三面&quot;">​</a></h2><p>聊职业发展</p><p>面试官强调转转属于 <strong>互联网电商</strong>, 银行属于 <strong>传统行业</strong>, 开发模式会很不相同</p><p>需要站在职业发展的角度再来考虑转转是否合适, 如本人具有4年金融行业开发经验, <strong>首选应该是金融行业, 而不是互联网电商</strong></p><p>而选择互联网电商之后意味着 <strong>在行业经验上从头开始</strong>, 也意味着积累互联网电商经验后的未来, 首选是互联网电商</p><p>因为本人的职业规划是 <strong>个人技术影响力</strong> 以及 <strong>架构能力</strong> 并没有考虑业务方向的职业规划, 所以答得稀烂</p><p>(不知道这种公司明确需要业务型人员的情况下, 我说我的职业规划不是业务方向而是架构方向, 所以对行业没有太多顾虑这种答复会是好的回答还是毁灭的回答)</p><p>只能尽量给一种 <strong>积极面对变化的态度</strong>, 没有其他好的表现(说实话, 有点被打击觉得没答好职业发展😭而给人一种没有职业规划的感觉</p><p>问问题环节应该问一下 <code>&#39;您对我现在进入互联网电商，有什么看法和建议吗? 应该如何走得更远更深?&#39;</code> 💢 这么宝贵的机会不问 气死我了</p><p>补充: 仔细思考了一下, 面试官想表达的是 <strong>8年工作经验的开发</strong> 和 <strong>10年工作经验的开发</strong> 之间的差距在技术上基本没有多大差别, 那么 <strong>8年工作经验的开发</strong> 如何胜过 <strong>10年开发经验的人</strong> ，那就是 <code>相关行业的专业度</code> 和个人身上 <code>除了开发能力以外的附带价值</code>, 而希望了解的是, 我4年经验差不多结束技术能力快速积累的时期, 针对这一前提的职业发展思考</p><p>🤔 这确实是我没有思考过的方向, 因为我对个人发展的前提是 <code>自身技术能力</code> 8年经验也能胜过10年, 因此答的方向一直不在一个频道上, 那么我以往职业发展的思考是不是不太正确, 除了个人技术能力还要积累行业解决方案能力(但是我4年的金融行业经验也没感觉给我带来什么金融业解决方案的积累......)</p>`,21),e=[p];function t(r,c,i,y,F,D){return l(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
