import{_ as e,o as a,c as i,V as t}from"./chunks/framework.b450deef.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/03-架构/设计/JsBridge.md","filePath":"articles/03-架构/设计/JsBridge.md"}'),s={name:"articles/03-架构/设计/JsBridge.md"},c=t('<p>实际场景</p><ul><li>APP容器运行 WebView 如: Hybrid 应用、mpass</li><li>小程序: 微信 JS-SDK（WeiXinJSBridge）</li><li>React-Native</li><li>Nodejs( js 调用底层操作系统 C/C++)</li></ul><p><img src="https://kingan-md-img.oss-cn-guangzhou.aliyuncs.com/blog/20230216160317.png" alt=""></p><p>👆 <code>Node Bindings</code> 就有点类似 <code>JSBridge</code> 的功能，所以 <code>JSBridge</code> 本身是一个很简单的东西，其更多的是 一种形式、一种思想</p><p><img src="https://kingan-md-img.oss-cn-guangzhou.aliyuncs.com/blog/20230216160420.png" alt=""></p><p>👆 核心是建立 <code>Native</code> 和 <code>Javascript</code> 间消息 双向通信 通道</p><h2 id="微信-js-sdk-weixinjsbridge" tabindex="-1">微信 JS-SDK（WeiXinJSBridge） <a class="header-anchor" href="#微信-js-sdk-weixinjsbridge" aria-label="Permalink to &quot;微信 JS-SDK（WeiXinJSBridge）&quot;">​</a></h2><p><code>&lt;script src=&quot;https://res2.wx.qq.com/open/js/jweixin-1.4.0.js&quot;&gt;&lt;/script&gt;</code></p><p>自执行函数往 <code>Window</code> 全局挂在 <code>window.wx</code>类库</p><h2 id="javascript-执行-native-主要" tabindex="-1">JavaScript 执行 Native (主要) <a class="header-anchor" href="#javascript-执行-native-主要" aria-label="Permalink to &quot;JavaScript 执行 Native (主要)&quot;">​</a></h2><p>调用全局挂载的类库方法 这些方法基本都是发布订阅模式, Native方有相应的监听触发 JavaScript 期望的功能</p><p>并且在此基础上通知 JavaScript 执行结果或者其他</p><p>所以即使最简单的通知 Native 替我们做某事, 也是双向通信(需要通知回来执行结果)</p><p><img src="https://kingan-md-img.oss-cn-guangzhou.aliyuncs.com/blog/20230216163013.png" alt=""></p><p>思路简单, 实际编写看封装出的公共性</p><p>TODO: liebao 封装📦</p><h2 id="native-执行-javascript" tabindex="-1">Native 执行 JavaScript <a class="header-anchor" href="#native-执行-javascript" aria-label="Permalink to &quot;Native 执行 JavaScript&quot;">​</a></h2><p>Native 可以调用 WebView 的执行 js 字符串方法</p>',18),o=[c];function r(p,d,n,l,g,h){return a(),i("div",null,o)}const v=e(s,[["render",r]]);export{m as __pageData,v as default};
