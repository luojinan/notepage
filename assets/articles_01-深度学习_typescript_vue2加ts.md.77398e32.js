import{_ as e,o as t,c as a,V as s}from"./chunks/framework.b450deef.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/01-深度学习/typescript/vue2加ts.md","filePath":"articles/01-深度学习/typescript/vue2加ts.md"}'),r={name:"articles/01-深度学习/typescript/vue2加ts.md"},o=s('<h2 id="vue2不引入ts的效果" tabindex="-1">vue2不引入ts的效果 <a class="header-anchor" href="#vue2不引入ts的效果" aria-label="Permalink to &quot;vue2不引入ts的效果&quot;">​</a></h2><h2 id="vue2引入ts的步骤" tabindex="-1">vue2引入ts的步骤 <a class="header-anchor" href="#vue2引入ts的步骤" aria-label="Permalink to &quot;vue2引入ts的步骤&quot;">​</a></h2><h2 id="vue2通过vue-extend使用ts特性" tabindex="-1">vue2通过Vue.extend使用ts特性 <a class="header-anchor" href="#vue2通过vue-extend使用ts特性" aria-label="Permalink to &quot;vue2通过Vue.extend使用ts特性&quot;">​</a></h2><h2 id="vue2通过class装饰器使用ts特性" tabindex="-1">vue2通过class装饰器使用ts特性 <a class="header-anchor" href="#vue2通过class装饰器使用ts特性" aria-label="Permalink to &quot;vue2通过class装饰器使用ts特性&quot;">​</a></h2><p>经过装饰器的class还是会被转化为vue2 optionsAPI 的结构</p><h2 id="装饰器原理" tabindex="-1">装饰器原理 <a class="header-anchor" href="#装饰器原理" aria-label="Permalink to &quot;装饰器原理&quot;">​</a></h2><p>vue文件引用工具函数，还是可以享受到ts的好处的</p>',7),u=[o];function c(i,n,l,d,h,_){return t(),a("div",null,u)}const m=e(r,[["render",c]]);export{p as __pageData,m as default};
