import{_ as e,o,c,V as t}from"./chunks/framework.b450deef.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/03-架构/设计/一码多端.md","filePath":"articles/03-架构/设计/一码多端.md"}'),d={name:"articles/03-架构/设计/一码多端.md"},_=t("<p>各前端框架官方提供的 <code>SSR</code> 功能，不动业务源码，新增一层抹平层 <code>nodejs环境</code> 和 <code>浏览器环境</code>，实现一套代码打包2个产物支持 <code>浏览器</code> 和 <code>nodejs环境</code></p><blockquote><p>就很类似<code>一码两端</code>(一套代码打包2个产物支持 <code>浏览器环境</code> 和 <code>APP webView</code> 环境)</p><p>或者 <code>微前端</code>，不动多个内管应用的业务源码，整合到一起，新增一层抹平层</p></blockquote><p>因此学习官方提供的 <code>SSR</code> 底层原理，如何优雅的实现抹平层后</p><p>可以很好的帮助我们再来思考一码多端的实现</p>",4),a=[_];function s(r,p,n,i,l,m){return o(),c("div",null,a)}const u=e(d,[["render",s]]);export{f as __pageData,u as default};
