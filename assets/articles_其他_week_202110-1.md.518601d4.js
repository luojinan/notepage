import{_ as e,o as a,c as r,V as t}from"./chunks/framework.b450deef.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/其他/week/202110-1.md","filePath":"articles/其他/week/202110-1.md"}'),i={name:"articles/其他/week/202110-1.md"},o=t('<nav class="table-of-contents"><ul><li><a href="#_1-service-worker-简介-中文">1. Service Worker 简介（中文）</a></li><li><a href="#_2-异步函数如何使用缓存-英文">2. 异步函数如何使用缓存？（英文）</a></li><li><a href="#_3-mithril-js">3. Mithril.js</a></li><li><a href="#_4-pollen">4.Pollen</a></li><li><a href="#_5-可视化代码执行">5. 可视化代码执行</a></li><li><a href="#_6-mini-stores">6. mini-stores</a></li></ul></nav><h3 id="_1-service-worker-简介-中文" tabindex="-1">1. Service Worker 简介（中文） <a class="header-anchor" href="#_1-service-worker-简介-中文" aria-label="Permalink to &quot;1. Service Worker 简介（中文）&quot;">​</a></h3><p><a href="https://developers.google.com/web/fundamentals/primers/service-workers" target="_blank" rel="noreferrer">谷歌官方的 Service Worker 教程</a>，介绍什么是 PWA 应用，以及怎么开发，写得非常好，很容易懂。官方提供中文版翻译。 相关API可以看MDN文档 国内PWA应用教程可以看百度团队的<a href="https://lavas-project.github.io/pwa-book/" target="_blank" rel="noreferrer">lavas</a></p><h3 id="_2-异步函数如何使用缓存-英文" tabindex="-1">2. 异步函数如何使用缓存？（英文） <a class="header-anchor" href="#_2-异步函数如何使用缓存-英文" aria-label="Permalink to &quot;2. 异步函数如何使用缓存？（英文）&quot;">​</a></h3><p>需要密集计算的函数，可以部署缓存（memoizing），用来提高性能。本文介绍了函数缓存的概念和实现 TODO: 待整理成工具函数</p><h3 id="_3-mithril-js" tabindex="-1">3. Mithril.js <a class="header-anchor" href="#_3-mithril-js" aria-label="Permalink to &quot;3. Mithril.js&quot;">​</a></h3><p>一个非常易用的轻量级前端框架，只做了 DOM 的包装层，没有加任何其他接口，体积小，加载快，并且支持组件和前端路由。开发小型页面，明显优于 React。 但是不知道什么原因，多年来它一直不流行，因为名字难记？......</p><h3 id="_4-pollen" tabindex="-1">4.Pollen <a class="header-anchor" href="#_4-pollen" aria-label="Permalink to &quot;4.Pollen&quot;">​</a></h3><p>一个 CSS 变量库，提供一组常用的 CSS 变量（比如颜色、长度、字体大小等等）。开发者可以将这个库作为初始变量，以后通过调整变量来改变样式，比如从亮模式变成暗模式 作者介绍他们公司如何使用 GitHub Actions，将各种开发步骤自动化，举了很多例子，演示了测试、代码格式化、构建、部署的配置文件应该怎么写。</p><h3 id="_5-可视化代码执行" tabindex="-1">5. 可视化代码执行 <a class="header-anchor" href="#_5-可视化代码执行" aria-label="Permalink to &quot;5. 可视化代码执行&quot;">​</a></h3><p><a href="https://pythontutor.com/" target="_blank" rel="noreferrer">这个网站</a>会将代码的执行流程，转成可视化图形，展示代码一步步是怎么执行的。目前支持 Python、Java、C、C++、JavaScript 和 Ruby 代码。 试试看浏览器引擎处理异步事件队列</p><h3 id="_6-mini-stores" tabindex="-1">6. mini-stores <a class="header-anchor" href="#_6-mini-stores" aria-label="Permalink to &quot;6. mini-stores&quot;">​</a></h3><p>小程序状态管理库，方便管理页面状态</p>',13),l=[o];function s(n,h,c,_,p,d){return a(),r("div",null,l)}const u=e(i,[["render",s]]);export{f as __pageData,u as default};
